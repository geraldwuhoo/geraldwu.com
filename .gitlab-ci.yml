stages:
  - prepare
  - build
  - deploy

variables:
  RESUME_IMAGE: "build-resume"
  SSH_IMAGE: "ssh"
  OUTPUT_DIR: "out"

.build_meta: &build_meta
  image: docker:stable
  services:
    - docker:stable-dind
  stage: prepare
  before_script:
    - docker info
    - echo "$CI_REGISTRY_PASSWORD" | docker login --username "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"

meta-build-resume-image:
  <<: *build_meta
  script:
    - docker build -t "$CI_REGISTRY_IMAGE/$RESUME_IMAGE:latest" -t "$CI_REGISTRY_IMAGE/$RESUME_IMAGE:$CI_COMMIT_SHORT_SHA" -f meta/Dockerfile.build .
    - docker push "$CI_REGISTRY_IMAGE/$RESUME_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE/$RESUME_IMAGE:$CI_COMMIT_SHORT_SHA"
  only:
    changes:
      - meta/Dockerfile.build

meta-build-ssh-image:
  <<: *build_meta
  script:
    - docker build -t "$CI_REGISTRY_IMAGE/$SSH_IMAGE:latest" -t "$CI_REGISTRY_IMAGE/$SSH_IMAGE:$CI_COMMIT_SHORT_SHA" -f meta/Dockerfile.ssh .
    - docker push "$CI_REGISTRY_IMAGE/$SSH_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE/$SSH_IMAGE:$CI_COMMIT_SHORT_SHA"
  only:
    changes:
      - meta/Dockerfile.ssh


build:
  image: "$CI_REGISTRY_IMAGE/$RESUME_IMAGE"
  stage: build
  script:
    - make
    - cp -av "$OUTPUT_DIR"/* website/style.css .
  artifacts:
    paths:
      - index.html
      - style.css
      - resume.pdf

deploy:
  image: "$CI_REGISTRY_IMAGE/$SSH_IMAGE"
  stage: deploy
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - export DEPLOY_BRANCH="$([ "$CI_COMMIT_BRANCH" = "master" ] || echo "$CI_COMMIT_BRANCH")"
  script:
    - scp index.html style.css resume.pdf "${SITE_PATH}/${DEPLOY_BRANCH}"
